/*
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.
 */
package freenet.support;

import java.util.HashMap;


/**
 * Class that provides data structures filled with
 * HTML Entities and correspondant char value
 * 
 * @author Alberto Bacchelli &lt;sback@freenetproject.org&gt;
 */
public final class HTMLEntities {
	
	/**
	 * a Map where the HTML Entity is the
	 * value and the correspondant char is
	 * the key
	 */
	public static final HashMap encodeMap;
	
	/**
	 * a Map where the HTML Entity is the
	 * key and the correspondant char is
	 * the value
	 */
	public static final HashMap decodeMap;
	
	private static final Object[][] charArray = {
		{new Character((char)0), "#0"},
		{new Character((char)34), "quot"},
		{new Character((char)38), "amp"},
		{new Character((char)39), "#39"},
		{new Character((char)60), "lt"},
		{new Character((char)62), "gt"},
		{new Character((char)160), "nbsp"},
		{new Character((char)161), "iexcl"},
		{new Character((char)162), "cent"},
		{new Character((char)163), "pound"},
		{new Character((char)164), "curren"},
		{new Character((char)165), "yen"},
		{new Character((char)166), "brvbar"},
		{new Character((char)167), "sect"},
		{new Character((char)168), "uml"},
		{new Character((char)169), "copy"},
		{new Character((char)170), "ordf"},
		{new Character((char)171), "laquo"},
		{new Character((char)172), "not"},
		{new Character((char)173), "shy"},
		{new Character((char)174), "reg"},
		{new Character((char)175), "macr"},
		{new Character((char)176), "deg"},
		{new Character((char)177), "plusmn"},
		{new Character((char)178), "sup2"},
		{new Character((char)179), "sup3"},
		{new Character((char)180), "acute"},
		{new Character((char)181), "micro"},
		{new Character((char)182), "para"},
		{new Character((char)183), "middot"},
		{new Character((char)184), "cedil"},
		{new Character((char)185), "sup1"},
		{new Character((char)186), "ordm"},
		{new Character((char)187), "raquo"},
		{new Character((char)188), "frac14"},
		{new Character((char)189), "frac12"},
		{new Character((char)190), "frac34"},
		{new Character((char)191), "iquest"},
		{new Character((char)192), "Agrave"},
		{new Character((char)193), "Aacute"},
		{new Character((char)194), "Acirc"},
		{new Character((char)195), "Atilde"},
		{new Character((char)196), "Auml"},
		{new Character((char)197), "Aring"},
		{new Character((char)198), "AElig"},
		{new Character((char)199), "Ccedil"},
		{new Character((char)200), "Egrave"},
		{new Character((char)201), "Eacute"},
		{new Character((char)202), "Ecirc"},
		{new Character((char)203), "Euml"},
		{new Character((char)204), "Igrave"},
		{new Character((char)205), "Iacute"},
		{new Character((char)206), "Icirc"},
		{new Character((char)207), "Iuml"},
		{new Character((char)208), "ETH"},
		{new Character((char)209), "Ntilde"},
		{new Character((char)210), "Ograve"},
		{new Character((char)211), "Oacute"},
		{new Character((char)212), "Ocirc"},
		{new Character((char)213), "Otilde"},
		{new Character((char)214), "Ouml"},
		{new Character((char)215), "times"},
		{new Character((char)216), "Oslash"},
		{new Character((char)217), "Ugrave"},
		{new Character((char)218), "Uacute"},
		{new Character((char)219), "Ucirc"},
		{new Character((char)220), "Uuml"},
		{new Character((char)221), "Yacute"},
		{new Character((char)222), "THORN"},
		{new Character((char)223), "szlig"},
		{new Character((char)224), "agrave"},
		{new Character((char)225), "aacute"},
		{new Character((char)226), "acirc"},
		{new Character((char)227), "atilde"},
		{new Character((char)228), "auml"},
		{new Character((char)229), "aring"},
		{new Character((char)230), "aelig"},
		{new Character((char)231), "ccedil"},
		{new Character((char)232), "egrave"},
		{new Character((char)233), "eacute"},
		{new Character((char)234), "ecirc"},
		{new Character((char)235), "euml"},
		{new Character((char)236), "igrave"},
		{new Character((char)237), "iacute"},
		{new Character((char)238), "icirc"},
		{new Character((char)239), "iuml"},
		{new Character((char)240), "eth"},
		{new Character((char)241), "ntilde"},
		{new Character((char)242), "ograve"},
		{new Character((char)243), "oacute"},
		{new Character((char)244), "ocirc"},
		{new Character((char)245), "otilde"},
		{new Character((char)246), "ouml"},
		{new Character((char)247), "divide"},
		{new Character((char)248), "oslash"},
		{new Character((char)249), "ugrave"},
		{new Character((char)250), "uacute"},
		{new Character((char)251), "ucirc"},
		{new Character((char)252), "uuml"},
		{new Character((char)253), "yacute"},
		{new Character((char)254), "thorn"},
		{new Character((char)255), "yuml"},
		{new Character((char)260), "#260"},
		{new Character((char)261), "#261"},
		{new Character((char)262), "#262"},
		{new Character((char)263), "#263"},
		{new Character((char)280), "#280"},
		{new Character((char)281), "#281"},
		{new Character((char)321), "#321"},
		{new Character((char)322), "#322"},
		{new Character((char)323), "#323"},
		{new Character((char)324), "#324"},
		{new Character((char)338), "OElig"},
		{new Character((char)339), "oelig"},
		{new Character((char)346), "#346"},
		{new Character((char)347), "#347"},
		{new Character((char)352), "Scaron"},
		{new Character((char)353), "scaron"},
		{new Character((char)376), "Yuml"},
		{new Character((char)377), "#377"},
		{new Character((char)378), "#378"},
		{new Character((char)379), "#379"},
		{new Character((char)380), "#380"},
		{new Character((char)402), "fnof"},
		{new Character((char)710), "circ"},
		{new Character((char)732), "tilde"},
		{new Character((char)913), "Alpha"},
		{new Character((char)914), "Beta"},
		{new Character((char)915), "Gamma"},
		{new Character((char)916), "Delta"},
		{new Character((char)917), "Epsilon"},
		{new Character((char)918), "Zeta"},
		{new Character((char)919), "Eta"},
		{new Character((char)920), "Theta"},
		{new Character((char)921), "Iota"},
		{new Character((char)922), "Kappa"},
		{new Character((char)923), "Lambda"},
		{new Character((char)924), "Mu"},
		{new Character((char)925), "Nu"},
		{new Character((char)926), "Xi"},
		{new Character((char)927), "Omicron"},
		{new Character((char)928), "Pi"},
		{new Character((char)929), "Rho"},
		{new Character((char)931), "Sigma"},
		{new Character((char)932), "Tau"},
		{new Character((char)933), "Upsilon"},
		{new Character((char)934), "Phi"},
		{new Character((char)935), "Chi"},
		{new Character((char)936), "Psi"},
		{new Character((char)937), "Omega"},
		{new Character((char)945), "alpha"},
		{new Character((char)946), "beta"},
		{new Character((char)947), "gamma"},
		{new Character((char)948), "delta"},
		{new Character((char)949), "epsilon"},
		{new Character((char)950), "zeta"},
		{new Character((char)951), "eta"},
		{new Character((char)952), "theta"},
		{new Character((char)953), "iota"},
		{new Character((char)954), "kappa"},
		{new Character((char)955), "lambda"},
		{new Character((char)956), "mu"},
		{new Character((char)957), "nu"},
		{new Character((char)958), "xi"},
		{new Character((char)959), "omicron"},
		{new Character((char)960), "pi"},
		{new Character((char)961), "rho"},
		{new Character((char)962), "sigmaf"},
		{new Character((char)963), "sigma"},
		{new Character((char)964), "tau"},
		{new Character((char)965), "upsilon"},
		{new Character((char)966), "phi"},
		{new Character((char)967), "chi"},
		{new Character((char)968), "psi"},
		{new Character((char)969), "omega"},
		{new Character((char)977), "thetasym"},
		{new Character((char)978), "upsih"},
		{new Character((char)982), "piv"},
		{new Character((char)8194), "ensp"},
		{new Character((char)8195), "emsp"},
		{new Character((char)8201), "thinsp"},
		{new Character((char)8204), "zwnj"},
		{new Character((char)8205), "zwj"},
		{new Character((char)8206), "lrm"},
		{new Character((char)8207), "rlm"},
		{new Character((char)8211), "ndash"},
		{new Character((char)8212), "mdash"},
		{new Character((char)8216), "lsquo"},
		{new Character((char)8217), "rsquo"},
		{new Character((char)8218), "sbquo"},
		{new Character((char)8220), "ldquo"},
		{new Character((char)8221), "rdquo"},
		{new Character((char)8222), "bdquo"},
		{new Character((char)8224), "dagger"},
		{new Character((char)8225), "Dagger"},
		{new Character((char)8226), "bull"},
		{new Character((char)8230), "hellip"},
		{new Character((char)8240), "permil"},
		{new Character((char)8242), "prime"},
		{new Character((char)8243), "Prime"},
		{new Character((char)8249), "lsaquo"},
		{new Character((char)8250), "rsaquo"},
		{new Character((char)8254), "oline"},
		{new Character((char)8260), "frasl"},
		{new Character((char)8364), "euro"},
		{new Character((char)8465), "image"},
		{new Character((char)8472), "weierp"},
		{new Character((char)8476), "real"},
		{new Character((char)8482), "trade"},
		{new Character((char)8501), "alefsym"},
		{new Character((char)8592), "larr"},
		{new Character((char)8593), "uarr"},
		{new Character((char)8594), "rarr"},
		{new Character((char)8595), "darr"},
		{new Character((char)8596), "harr"},
		{new Character((char)8629), "crarr"},
		{new Character((char)8656), "lArr"},
		{new Character((char)8657), "uArr"},
		{new Character((char)8658), "rArr"},
		{new Character((char)8659), "dArr"},
		{new Character((char)8660), "hArr"},
		{new Character((char)8704), "forall"},
		{new Character((char)8706), "part"},
		{new Character((char)8707), "exist"},
		{new Character((char)8709), "empty"},
		{new Character((char)8711), "nabla"},
		{new Character((char)8712), "isin"},
		{new Character((char)8713), "notin"},
		{new Character((char)8715), "ni"},
		{new Character((char)8719), "prod"},
		{new Character((char)8721), "sum"},
		{new Character((char)8722), "minus"},
		{new Character((char)8727), "lowast"},
		{new Character((char)8730), "radic"},
		{new Character((char)8733), "prop"},
		{new Character((char)8734), "infin"},
		{new Character((char)8736), "ang"},
		{new Character((char)8743), "and"},
		{new Character((char)8744), "or"},
		{new Character((char)8745), "cap"},
		{new Character((char)8746), "cup"},
		{new Character((char)8747), "int"},
		{new Character((char)8756), "there4"},
		{new Character((char)8764), "sim"},
		{new Character((char)8773), "cong"},
		{new Character((char)8776), "asymp"},
		{new Character((char)8800), "ne"},
		{new Character((char)8801), "equiv"},
		{new Character((char)8804), "le"},
		{new Character((char)8805), "ge"},
		{new Character((char)8834), "sub"},
		{new Character((char)8835), "sup"},
		{new Character((char)8836), "nsub"},
		{new Character((char)8838), "sube"},
		{new Character((char)8839), "supe"},
		{new Character((char)8853), "oplus"},
		{new Character((char)8855), "otimes"},
		{new Character((char)8869), "perp"},
		{new Character((char)8901), "sdot"},
		{new Character((char)8968), "lceil"},
		{new Character((char)8969), "rceil"},
		{new Character((char)8970), "lfloor"},
		{new Character((char)8971), "rfloor"},
		{new Character((char)9001), "lang"},
		{new Character((char)9002), "rang"},
		{new Character((char)9674), "loz"},
		{new Character((char)9824), "spades"},
		{new Character((char)9827), "clubs"},
		{new Character((char)9829), "hearts"},
		{new Character((char)9830), "diams"}
	};
	
	
	static {
		encodeMap = new HashMap();
		decodeMap = new HashMap();
		
		for(int i=0; i<charArray.length; i++) {
			encodeMap.put(charArray[i][0],charArray[i][1]);
			decodeMap.put(charArray[i][1],charArray[i][0]);
		}
		
	}

}
