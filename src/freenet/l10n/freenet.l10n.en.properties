testing.test=test$(test1)test$(test2)test
Toadlet.internalErrorTitle=Internal Error
Toadlet.internalErrorPleaseReport=Internal error : please report
Toadlet.unauthorized=You are not permitted access to this page.
BookmarkEditorToadlet.edit=Edit
BookmarkEditorToadlet.delete=Delete
BookmarkEditorToadlet.cut=Cut
BookmarkEditorToadlet.moveUp=Up
BookmarkEditorToadlet.moveDown=Down
BookmarkEditorToadlet.paste=Paste
BookmarkEditorToadlet.addBookmark=Add Bookmark
BookmarkEditorToadlet.addCategory=Add Category
BookmarkEditorToadlet.title=Bookmark Editor
BookmarkEditorToadlet.error=Error
BookmarkEditorToadlet.bookmarkDoesNotExist=Bookmark "${bookmark}" does not exist.
BookmarkEditorToadlet.deleteBookmark=Delete bookmark
BookmarkEditorToadlet.deleteCategory=Delete category
BookmarkEditorToadlet.deleteBookmarkConfirm=Are you sure you want to delete ${bookmark}?
BookmarkEditorToadlet.deleteCategoryConfirm=Are you sure you want to delete ${bookmark} and all of its children?
BookmarkEditorToadlet.cancelDelete=Cancel
BookmarkEditorToadlet.confirmDelete=Delete
BookmarkEditorToadlet.editBookmarkTitle=Edit Bookmark
BookmarkEditorToadlet.editCategoryTitle=Edit Category
BookmarkEditorToadlet.addNewBookmark=Add a new bookmark
BookmarkEditorToadlet.addNewCategory=Add a new category
BookmarkEditorToadlet.nameLabel=Name : 
BookmarkEditorToadlet.keyLabel=Key : 
BookmarkEditorToadlet.pasteTitle=Cut/Paste
BookmarkEditorToadlet.pasteOrCancel=Click on a paste icon or cancel.
BookmarkEditorToadlet.cancelCut=Cancel cut
BookmarkEditorToadlet.myBookmarksTitle=My Bookmarks
BookmarkEditorToadlet.deleteSucceededTitle=Delete Succeeded
BookmarkEditorToadlet.deleteSucceeded=The bookmark has been deleted successfully.
BookmarkEditorToadlet.changesSavedTitle=Modifications Saved
BookmarkEditorToadlet.changesSaved=The changes has been saved successfully.
BookmarkEditorToadlet.addedNewBookmarkTitle=New Bookmark Added
BookmarkEditorToadlet.addedNewBookmark=The new bookmark has been added successfully.
BookmarkEditorToadlet.invalidKeyTitle=Invalid Key
BookmarkEditorToadlet.invalidKeyWithReason=Invalid Freenet key.
BookmarkEditorToadlet.save=Save
ConfigToadlet.unauthorized=You are not permitted access to this page.
ConfigToadlet.appliedTitle=Configuration Applied
ConfigToadlet.appliedSuccess=Configuration changes were applied successfully.
ConfigToadlet.appliedFailureTitle=Configuration Not Applied
ConfigToadlet.appliedFailureExceptions=Your configuration changes were applied with the following exceptions:
ConfigToadlet.possibilitiesTitle=Your Possibilities
ConfigToadlet.shortTitle=Configuration
ConfigToadlet.returnToNodeConfig=Return to node configuration
ConfigToadlet.homepage=Node Homepage
ConfigToadlet.returnToNodeHomepage=Return to node homepage
ConfigToadlet.fullTitle=Freenet Node Configuration of ${name}
ConfigToadlet.configNavTitle=Configuration Navigation
ConfigToadlet.title=Freenet Node Configuration
ConfigToadlet.defaultIs=The default for that configuration option is : '${default}'.
ConfigToadlet.apply=Apply
ConfigToadlet.reset=Reset
DarknetConnectionsToadlet.unauthorized=You are not permitted access to this page.
DarknetConnectionsToadlet.fullTitle=${counts} Friends of ${name}
DarknetConnectionsToadlet.activityTitle=Current Activity
DarknetConnectionsToadlet.noRequests=Your node is not processing any requests right now.
DarknetConnectionsToadlet.activityInserts=Inserts: ${totalSenders} total senders, ${CHKhandlers} CHK handlers, ${SSKhandlers} SSK handlers
DarknetConnectionsToadlet.activityRequests=Requests: ${totalSenders} total senders, ${CHKhandlers} CHK handlers, ${SSKhandlers} SSK handlers
DarknetConnectionsToadlet.transferringRequests=Transferring Requests: sending ${senders}, receiving ${receivers}
DarknetConnectionsToadlet.connected=Connected: We're successfully connected to these nodes
DarknetConnectionsToadlet.connectedShort=Connected
DarknetConnectionsToadlet.backedOff=Connected but backed off: These peers are connected but we're backed off from them, so the node is not routing requests to them.
DarknetConnectionsToadlet.busy=Busy: These peers are connected but they are too busy to serve our requests, so the node is not routing requests to them.
DarknetConnectionsToadlet.backedOffShort=Backed off
DarknetConnectionsToadlet.busyShort=Busy
DarknetConnectionsToadlet.tooNew=Connected but too new: This peer's minimum mandatory build is higher than this node's build number.
DarknetConnectionsToadlet.tooNewShort=Too new
DarknetConnectionsToadlet.tooOld=Connected but too old: This node's minimum mandatory build is higher than this peer's build number. This node is not routing requests to it.
DarknetConnectionsToadlet.tooOldShort=Too old
DarknetConnectionsToadlet.notConnected=Not connected: No connection so far but this node is continuously trying to connect.
DarknetConnectionsToadlet.notConnectedShort=Disconnected
DarknetConnectionsToadlet.neverConnected=Never Connected: The node has never connected to this peer.
DarknetConnectionsToadlet.neverConnectedShort=Never connected
DarknetConnectionsToadlet.disabled=Not connected and disabled: because the user has instructed the node not to connect to this peer.
DarknetConnectionsToadlet.disabledShort=Disabled
DarknetConnectionsToadlet.bursting=Not connected and bursting: this node is, for a short period, trying to connect to these peers because the user has set BurstOnly on them.
DarknetConnectionsToadlet.burstingShort=Bursting
DarknetConnectionsToadlet.listening=Not connected but listening: this node won't try to connect to this peers very often because the user has set BurstOnly on it. 
DarknetConnectionsToadlet.listeningShort=Listening
DarknetConnectionsToadlet.listenOnly=Not connected and listen only: this node won't try to connect to this peer at all because the user has set ListenOnly on it.
DarknetConnectionsToadlet.listenOnlyShort=Listen only
DarknetConnectionsToadlet.myFriends=My Friends
DarknetConnectionsToadlet.noPeersFirstHalf=Freenet can not work as you have not added any peers so far. Please go to the
DarknetConnectionsToadlet.nodeHomepage=node homepage
DarknetConnectionsToadlet.noPeersSecondHalf= and read the top infobox to see how it is done.
DarknetConnectionsToadlet.statusTitle=Status
DarknetConnectionsToadlet.nameClickToMessage=The node's name. Click on the name link to send the node a N2NTM (Node To Node Text Message)
DarknetConnectionsToadlet.nameTitle=Name
DarknetConnectionsToadlet.ipAddress=The node's network address as IP:Port
DarknetConnectionsToadlet.ipAddressTitle=Address
DarknetConnectionsToadlet.versionTitle=Version
DarknetConnectionsToadlet.idleTime=How long since the node connected or was last seen
DarknetConnectionsToadlet.idleTimeTitle=Connected / Idle
DarknetConnectionsToadlet.privateNote=A private note concerning this peer
DarknetConnectionsToadlet.privateNoteTitle=Private Note
DarknetConnectionsToadlet.unknownAddress=(unknown address)
DarknetConnectionsToadlet.selectAction=-- Select action --
DarknetConnectionsToadlet.sendMessageToPeers=Send N2NTM to selected peers
DarknetConnectionsToadlet.updateChangedPrivnotes=Update changed private notes
DarknetConnectionsToadlet.separator=-- -- --
DarknetConnectionsToadlet.removePeers=Remove selected peers
DarknetConnectionsToadlet.go=Go
DarknetConnectionsToadlet.addPeerTitle=Add another peer
DarknetConnectionsToadlet.pasteReference=Paste the reference here:
DarknetConnectionsToadlet.urlReference=Enter the URL of the reference here:
DarknetConnectionsToadlet.fileReference=Choose the file containing the reference here: 
DarknetConnectionsToadlet.enterDescription=Enter description:
DarknetConnectionsToadlet.add=Add
DarknetConnectionsToadlet.myReferenceHeader=${linkref}My Node Reference${/linkref} (${linktext}as text${/linktext})
DarknetConnectionsToadlet.referenceCopyWarning=Node reference must be copied ${bold}AS IS${/bold}. Modifying it will make it ${bold}useless${/bold}.
DarknetConnectionsToadlet.nodePortsTitle=Ports used by the Node
DarknetConnectionsToadlet.fnpPort=FNP: ${port}/udp (between nodes; this is usually the only port that you might want to port forward)
DarknetConnectionsToadlet.fproxyPort=FProxy: ${port}/tcp (this web interface)
DarknetConnectionsToadlet.fproxyDisabled=FProxy is disabled (this web interface)
DarknetConnectionsToadlet.fcpPort=FCP: ${port}/tcp (for Freenet clients such as Frost and Thaw)
DarknetConnectionsToadlet.fcpDisabled=FCP is disabled (for Freenet clients such as Frost and Thaw)
DarknetConnectionsToadlet.tmciPort=TMCI: ${port}/tcp (simple telnet-based command-line interface)
DarknetConnectionsToadlet.tmciDisabled=TMCI is disabled (simple telnet-based command-line interface)
DarknetConnectionsToadlet.failedToAddNodeTitle=Failed To Add Node
DarknetConnectionsToadlet.cantFetchNoderefURL=Unable to retrieve node reference from ${url}. Please try again.
DarknetConnectionsToadlet.noRefOrURL=Could not detect either a node reference or a URL. Please try again.
DarknetConnectionsToadlet.cantParseWrongEnding=Unable to parse the node reference: It should end with End on a line by itself, but it ends with: ${end}
DarknetConnectionsToadlet.cantParseTryAgain=Unable to parse the given text as a node reference: (${error}). Please try again.
DarknetConnectionsToadlet.failedToAddNodeInternalErrorTitle=Failed to Add Node: Internal Error
DarknetConnectionsToadlet.failedToAddNodeInternalError=Unable to parse the given text as a node reference. Please report the following to the developers:
DarknetConnectionsToadlet.invalidSignature=Unable to verify the signature of the given reference (${error}).
DarknetConnectionsToadlet.triedToAddSelf=You can't add your own node to the list of remote peers.
DarknetConnectionsToadlet.alreadyInReferences=We already have the given reference.
DarknetConnectionsToadlet.sendMessageTitle=Send Node to Node Text Message
DarknetConnectionsToadlet.confirmRemoveNode=Are you sure you wish to remove "+peerNodes[i].getName()+" ? Before it has at least one week downtime, it's not recommended to do so, as it may be down only temporarily, and many users cannot run their nodes 24x7.
DarknetConnectionsToadlet.confirmRemoveNodeWarningTitle=Node Removal
DarknetConnectionsToadlet.confirmRemoveNodeTitle=Please confirm
DarknetConnectionsToadlet.cancel=Cancel
DarknetConnectionsToadlet.remove=Remove it!
DarknetConnectionsToadlet.forceRemove=Force Remove
FproxyToadlet.dangerousRSSTitle=Potentially Dangerous Content (RSS)
FProxyToadlet.dangerousRSSSubtitle=RSS feed may be dangerous
FProxyToadlet.dangerousRSS=Freenet has detected that the file you are trying to fetch might be RSS. RSS cannot be properly filtered by Freenet, and may contain web-bugs (inline images etc which may expose your IP address to a malicious site author and therefore break your anonymity). Firefox 2.0 and Internet Explorer 7.0 will open the file as RSS even though its content type is "${type}".
FProxyToadlet.options=Your options are:
FProxyToadlet.openPossRSSAsPlainText=${link}Click here${/link} to open the file as plain text (this ${bold}may be dangerous${/bold} if you are running IE7 or FF2).
FProxyToadlet.openPossRSSAsForceDisk=${link}Click here${/link} to try to force your browser to download the file to disk (this ${bold}this may also be dangerous${/bold} if you run Firefox 2.0.0, 2.0.1 should fix this).
FProxyToadlet.openRSSForce=${link}Click here${/link} to open the file as ${mime} (this ${bold}may be dangerous${/bold} on IE7 or FF2).
FProxyToadlet.openRSSAsRSS=${link}Click here${/link} to open the file as RSS (this <b>is dangerous</b> if the site author is malicious as freenet does not know how to filter RSS yet).
FProxyToadlet.backToReferrer=${link}Click here${/link} to go back to the referring page.
FProxyToadlet.backToFProxy=${link}Click here${/link} to go to the FProxy home page.
FProxyToadlet.dangerousContentTitle=Potentially Dangerous Content
FProxyToadlet.openAsText=${link}Click here${/link} to open the file as plain text (this should not be dangerous but it may be garbled).
FProxyToadlet.openForceDisk=${link}Click here${/link} to force your browser to download the file to disk.
FProxyToadlet.openForce=${link}Click here${/link} to open the file as ${mime} (read warning above!).
FProxyToadlet.notFoundTitle=Not Found
FProxyToadlet.invalidKeyTitle=Invalid Key
FProxyToadlet.invalidKeyWithReason=Invalid key: ${reason}
FProxyToadlet.pathNotFoundTitle=Path Not Found
FProxyToadlet.pathNotFound=The specified path does not exist.
FProxyToadlet.expectedKeyButGot=Expected a freenet key, but got: 
FProxyToadlet.goBack=Go back
FProxyToadlet.homepage=Homepage
FProxyToadlet.homepageTitle=Node homepage
FProxyToadlet.notEnoughMetaStrings=Not enough meta-strings
FProxyToadlet.fileInformationTitle=File Information
FProxyToadlet.largeFile=Large file
FProxyToadlet.filenameLabel=Filename: 
FProxyToadlet.sizeLabel=Size: 
FProxyToadlet.mayChange= (may change)
FProxyToadlet.sizeUnknown=Size: unknown
FProxyToadlet.mimeType=MIME type: ${mime}
FProxyToadlet.mimeType=Expected MIME type: ${mime}
FProxyToadlet.unknownMIMEType=MIME type: unknown
FProxyToadlet.explanationTitle=Explanation
FProxyToadlet.largeFileExplanationAndOptions=The Freenet key you requested refers to a large file. Files of this size cannot generally be sent directly to your browser since they take too long for your Freenet node to retrieve. The following options are available:
FProxyToadlet.fetchLargeFileAnywayAndDisplay=Fetch anyway and display file in browser
FProxyToadlet.downloadInBackgroundToDisk=Download in background and store in downloads directory
FProxyToadlet.abortToHomepage=Abort and return to the FProxy home page
FProxyToadlet.errorWithReason=Error: ${error}
FProxyToadlet.unableToRetrieve=Freenet was unable to retrieve this file.
FProxyToadlet.errorIsFatal= This is a fatal error. It is unlikely that retrying will solve the problem.
FProxyToadlet.retryNow=Retry now
FProxyToadlet.goBackToPrev=Go back to the previous page
FProxyToadlet.welcomeTitle=Home
FProxyToadlet.welcome=homepage
FProxyToadlet.pluginsTitle=Plugins
FProxyToadlet.plugins=configure and manage plugins
FProxyToadlet.configTitle=Configuration
FProxyToadlet.config=configure your node
FProxyToadlet.friendsTitle=Friends
FProxyToadlet.friends=manage f2f connections
FProxyToadlet.queueTitle=Queue
FProxyToadlet.queue=manage queued requests
FProxyToadlet.statsTitle=Statistics
FProxyToadlet.stats=view statistics
FProxyToadlet.translationTitle=Translation
FProxyToadlet.translation=helper to translate the node's interface into your native language
LocalFileInsertToadlet.dirAccessDenied=You cannot browse this directory
LocalFileInsertToadlet.listingTitle=Listing of ${path}
LocalFileInsertToadlet.listing=Directory Listing: ${path}
LocalFileInsertToadlet.fileHeader=File
LocalFileInsertToadlet.sizeHeader=Size
LocalFileInsertToadlet.insert=Insert
LocalFileInsertToadlet.dirCannotBeRead=The directory "${path}" can not be read.
LocalFileInsertToadlet.checkPathExist=Check that the specified path does exist.
LocalFileInsertToadlet.checkPathIsDir=Check that the specified path is a directory.
LocalFileInsertToadlet.checkPathReadable=Check that the specified path is readable by the user running the node.
N2NTMToadlet.unauthorized=You are not permitted access to this page.
N2NTMToadlet.sendMessage=Send Node to Node Text Message
N2NTMToadlet.sendMessageShort=Send message
N2NTMToadlet.peerNotFoundTitle=Peer not found
N2NTMToadlet.peerNotFoundWithHash=The peer with the hash code \u201c${hash}\u201d could not be found.
N2NTMToadlet.returnToNodeHomepage=Return to node homepage
N2NTMToadlet.homepage=Homepage
N2NTMToadlet.returnToFriends=Return to friends list
N2NTMToadlet.friends=Friends
N2NTMToadlet.tooLongTitle=Too Long
N2NTMToadlet.tooLong=N2NTMs are limited to 1024 characters
N2NTMToadlet.processingSend=Send Node to Node Text Message Processing
N2NTMToadlet.peerName=Peer Name
N2NTMToadlet.sendStatus=N2NTM Send Status
N2NTMToadlet.queuedTitle=Queued
N2NTMToadlet.queued=Queued: Peer not connected, so message queued for when it connects
N2NTMToadlet.delayedTitle=Delayed
N2NTMToadlet.delayed=Backed off: Sending of message possibly delayed to peer
N2NTMToadlet.sentTitle=Sent
N2NTMToadlet.sent=Message sent to peer
N2NTMToadlet.failedTitle=Failed
N2NTMToadlet.failed=Message not sent to peer: peer not connected
N2NTMToadlet.composingMessageLabel=Composing N2NTM to send to the following peers:
PluginToadlet.noWebInterfaceTitle=Plugin has no web interface
PluginToadlet.noWebInterface=The plugin does not have a web interface, so there is nothing to show.
PluginToadlet.pluginNotFoundTitle=Plugin not found
PluginToadlet.pluginNotFound=The requested plugin could not be found.
PluginToadlet.unsupportedMethodTitle=Unsupported Method
PluginToadlet.unsupportedMethod=Unsupported method.
PluginToadlet.pluginList=Plugin list
PluginToadlet.pluginListTitle=List of Plugins
PluginToadlet.failedToLoadPluginTitle=Failed to load plugin
PluginToadlet.failedToLoadPlugin=Failed to load plugin.
PluginToadlet.failedToLoadPluginCheckClass=The plugin you requested could not be loaded. Please verify the name of the plugin\u2019s class and the URL, if you gave one.
PluginToadlet.pluginNameTitle=Plugin Name
PluginToadlet.internalNameTitle=Internal Name
PluginToadlet.visit=Visit
PluginToadlet.addPluginTitle=Add a plugin
PluginToadlet.returnToPluginsWithLinks=Please ${link}return${/link} to the list of plugins.
PluginToadlet.loadPluginCommand=Load Plugin
PproxyToadlet.plugins=Plugins
PproxyToadlet.pluginUnloaded=Plugin unloaded
PproxyToadlet.pluginUnloadedWithName=The plugin ${name} has been unloaded.
PproxyToadlet.returnToPluginPage=Return to plugin page
PproxyToadlet.unloadPluginTitle=Unload plugin?
PproxyToadlet.unloadPluginWithName=Are you sure you wish to unload ${name}?
PproxyToadlet.cancel=Cancel
PproxyToadlet.unload=Unload
PproxyToadlet.pluginNotFoundReloadTitle=Plugin Not Found (reloading)
PproxyToadlet.pluginNotFoundReload=The specified plugin could not be located in order to reload it.
PproxyToadlet.pluginsWithNodeName=Plugins of ${name}
PproxyToadlet.classNameTitle=Class Name
PproxyToadlet.internalIDTitle=Internal ID
PproxyToadlet.startedAtTitle=Started at
PproxyToadlet.noPlugins=No plugins loaded
PproxyToadlet.reload=Reload
PproxyToadlet.loadPluginLabel=Load Plugin: 
QueueToadlet.priority=Priority
QueueToadlet.priority0=emergency
QueueToadlet.priority1=very high
QueueToadlet.priority2=high
QueueToadlet.priority3=medium
QueueToadlet.priority4=low
QueueToadlet.priority5=very low
QueueToadlet.priority6=will never finish
QueueToadlet.failedToRemoveRequest=Failed to remove request
QueueToadlet.failedToRemove=Failed to remove ${id}: ${message}
QueueToadlet.failedToRestartRequest=Failed to restart request
QueueToadlet.failedToRestart=Failed to restart: ${id}
QueueToadlet.failedToRemoveId=Failed to remove: ${id}
QueueToadlet.fcpIsMissing=FCP server is missing
QueueToadlet.pleaseEnableFCP=You need to enable the FCP server to access this page
QueueToadlet.title=Global queue of ${nodeName}
QueueToadlet.globalQueueIsEmpty=Global queue is empty
QueueToadlet.noTaskOnGlobalQueue=There is no task queued on the global queue at the moment.
QueueToadlet.requestNavigation=Request Navigation
QueueToadlet.completedDtoTemp=Completed downloads to temp
QueueToadlet.completedDtoDisk=Completed downloads to disk
QueueToadlet.completedDU=Completed directory uploads
QueueToadlet.failedD=Failed downloads
QueueToadlet.failedU=Failed uploads
QueueToadlet.failedDU=Failed directory uploads
QueueToadlet.DinProgress=Downloads in progress
QueueToadlet.UinProgress=Uploads in progress
QueueToadlet.DUinProgress=Directory uploads in progress
QueueToadlet.legend=Legend
QueueToadlet.completedDinTempDirectory=Completed: Downloads to temporary directory (${size})
QueueToadlet.completedDinDownloadDirectory=Completed: Downloads to download directory (${size})
QueueToadlet.completedU=Completed: Uploads (${size})
QueueToadlet.completedUDirectory=Completed: Directory Uploads (${size})
QueueToadlet.failedD=Failed: Downloads (${size})
QueueToadlet.failedU=Failed: Uploads (${size})
QueueToadlet.failedDU=Failed: Directory Uploads (${size})
QueueToadlet.wipD=In Progress: Downloads (${size})
QueueToadlet.wipU=In Progress: Uploads (${size})
QueueToadlet.wipDU=In Progress: Directory Uploads (${size})
QueueToadlet.unknown=Unknown
QueueToadlet.starting=STARTING
QueueToadlet.none=none
QueueToadlet.download=Download
QueueToadlet.change=Change
QueueToadlet.delete=Delete
QueueToadlet.restart=Restart
QueueToadlet.follow=Follow Redirect
QueueToadlet.insertFile=Insert File
QueueToadlet.insertAs=Insert as: 
QueueToadlet.identifier=Identifier
QueueToadlet.size=Size
QueueToadlet.mimeType=MIME Type
QueueToadlet.key=Key
QueueToadlet.fileName=Filename
QueueToadlet.files=Files
QueueToadlet.totalSize=Total Size
QueueToadlet.progress=Progress
QueueToadlet.reason=Reason
QueueToadlet.panicButton=Panic Button
QueueToadlet.panicButtonConfirmation=Delete everything without confirmation!\u00a0
QueueToadlet.progressbarAccurate=This progress value is accurate
QueueToadlet.progressbarNotAccurate=This progress value is likely to change as the file download process has not been finalized
QueueToadlet.persistence=Persistence
QueueToadlet.persistenceForever=forever
QueueToadlet.persistenceRebootr=reboot
QueueToadlet.persistenceNone=none
QueueToadlet.errorAccessDenied=Error: Access Denied!
QueueToadlet.errorAccessDeniedFile=The current configuration of the node prohibits you from uploading the file "${file}".
QueueToadlet.errorNoFileOrCannotRead=The file does not exist or it cannot be read
QueueToadlet.errorNoKey=No key specified to download
QueueToadlet.errorNoKeyToD=You did not specify a key to download.
QueueToadlet.errorInvalidURI=Invalid URI
QueueToadlet.errorInvalidURIToD=The URI is invalid and can not be downloaded.
QueueToadlet.errorInvalidURIToU=You did not specify a valid URI to insert the file to.
QueueToadlet.errorDToDisk=Cannot download to disk
QueueToadlet.errorDToDiskConfig=The node's current configuration does not allow you to download files to the downloads directory.
QueueToadlet.errorNoFileSelected=No file selected
QueueToadlet.errorNoFileSelectedU=You did not select a file to upload.
QueueToadlet.errorDownloadNotCompleted=Download Not Completed
QueueToadlet.errorDownloadNotFound=Download Not Found
QueueToadlet.errorDownloadNotFoundExplanation=The download could not be found. Maybe it was already deleted?
QueueToadlet.warningUnsafeContent=Potentially Unsafe Content
QueueToadlet.warningUnsafeContentExplanation=The file you want to download is currently not filtered by Freenet's content filter! That means that your anonymity can be compromised by opening the file!
StaticToadlet.pathNotFoundTitle=Path Not Found
StaticToadlet.pathNotFound=The path you specified doesn't exist.
StaticToadlet.pathInvalidChars=The given URI contains disallowed characters.
FcpServer.isEnabled=Is FCP server enabled ?
FcpServer.isEnabledLong=Is FCP server enabled ?
FcpServer.portNumber=FCP port number
FcpServer.portNumberLong=FCP port number.
FcpServer.bindTo=IP address to bind to
FcpServer.bindToLong=IP address to bind the FCP server to.
FcpServer.allowedHosts=Allowed hosts (read the warning!)
FcpServer.allowedHostsLong=IP addresses that are allowed to connect to the FCP server. May be a comma-separated list of single IPs and CIDR masked IPs like 192.168.0.0/24. WARNING! Anyone who has access to FCP can upload any file the node has access to, or download files to disk (but the node will try not to overwrite existing files).
FcpServer.allowedHostsFullAccess=Hosts allowed full access
FcpServer.allowedHostsFullAccessLong=IP addresses which are allowed full access to the node. Clients on these IPs may restart the node, reconfigure it, etc. Note that ALL clients are allowed to do direct disk I/O!
FcpServer.enablePersistentDownload=Enable persistent downloads?
FcpServer.enablePersistentDownloadLong=Whether to enable Persistence=forever for FCP requests. Meaning whether to support requests which persist over node restarts; they must be written to disk and this may constitute a security risk for some people.
FcpServer.filenameToStorePData=Filename to store persistent downloads in
FcpServer.filenameToStorePDataLong=Filename to store details of persistent downloads to.
FcpServer.intervalBetweenWrites=Interval between writing persistent downloads to disk
FcpServer.intervalBetweenWritesLong=Interval between writing persistent downloads to disk.
FcpServer.assumeDownloadDDAIsAllowed=Assume that download DDA is allowed ?
FcpServer.assumeDownloadDDAIsAllowedLong=Assume that download DDA is allowed ? if false, you have to issue a TestDDARequest before making any DDA access.
FcpServer.assumeUploadDDAIsAllowed=Assume that upload DDA is allowed ?
FcpServer.assumeUploadDDAIsAllowedLong=Assume that upload DDA is allowed ? if false, you have to issue a TestDDARequest before making any DDA access.
TestnetHandler.enable=Enable testnet mode? (DANGEROUS)
TestnetHandler.enableLong=Whether to enable testnet mode (DANGEROUS!). Testnet mode eliminates your anonymity in exchange for greatly assisting the developers in debugging the node.
TestnetHandler.port=Testnet port
TestnetHandler.portLong=Testnet port number (-1 = listenPort+1000)
TextModeClientInterfaceServer.enabled=Enable TMCI
TextModeClientInterfaceServer.enabledLong=Whether to enable the TMCI
TextModeClientInterfaceServer.bindTo=IP address to bind to
TextModeClientInterfaceServer.bindToLong=IP address to bind to
TextModeClientInterfaceServer.allowedHosts=Allowed hosts
TextModeClientInterfaceServer.allowedHostsLong=Hostnames or IP addresses that are allowed to connect to the TMCI. May be a comma-separated list of hostnames, single IPs and even CIDR masked IPs like 192.168.0.0/24
TextModeClientInterfaceServer.telnetPortNumber=Telnet port
TextModeClientInterfaceServer.telnetPortNumberLong=Telnet port number
TextModeClientInterfaceServer.enableInputOutput=Enable on stdout/stdin?
TextModeClientInterfaceServer.enableInputOutputLong=Enable text mode client interface on standard input/output? (.enabled refers to providing a telnet-style server, this runs it over a socket)
Node.disablePHTLS=Disable probabilistic HTL
Node.disablePHTLSLong=Disable probabilistic HTL (don't touch this unless you know what you are doing)
Node.maxHTL=Maximum HTL
Node.maxHTLLong=Maximum HTL (FOR DEVELOPER USE ONLY!)
Node.bindTo=IP address to bind to
Node.bindToLong=IP address to bind to
Node.port=FNP port number (UDP)
Node.portLong=UDP port for node-to-node communications (Freenet Node Protocol)
Node.dropPacketEvery=Testing packet drop frequency
Node.dropPacketEveryLong=Frequency of dropping packets. Testing option used by devs to simulate packet loss. 0 means never artificially drop a packet. Don't touch this!
Node.outBWLimit=Output bandwidth limit (bytes per second)
Node.outBWLimitLong=Hard output bandwidth limit (bytes/sec); the node should almost never exceed this
Node.inBWLimit=Input bandwidth limit (bytes per second)
Node.inBWLimitLong=Input bandwidth limit (bytes/sec); the node will try not to exceed this; -1 = 4x set outputBandwidthLimit
Node.swapRInterval=Swap request send interval (ms)
Node.swapRIntervalLong=Interval between swap attempting to send swap requests in milliseconds. Leave this alone!
Node.nodeDir=Node directory
Node.nodeDirLong=Name of directory to put node-related files e.g. peers list in
Node.extraPeerDir=Extra peer data directory
Node.extraPeerDirLong=Name of directory to put extra peer data in
Node.nodeName=Nickname for this Freenet node
Node.nodeNameLong=Node nickname. This will be visible to your friends only.
Node.forceBigShrink=Do large store shrinks immediately
Node.forceBigShrinkLong=Whether to do large store shrinks (over 10%) immediately (rather than waiting for the next node restart). Online shrinks do not preserve the most recently used data, so this is not recommended; use it only if you must have an immediate result.
Node.storeSize=Store size in bytes
Node.storeSizeLong=Store size in bytes
Node.storeDirectory=Store directory
Node.storeDirectoryLong=Name of directory to put store files in
Node.databaseMemory=Datastore maximum memory usage
Node.databaseMemoryLong=Maximum memory usage of the database backing the datastore indexes. 0 means no limit (limited to ~ 30% of maximum memory)
Node.disableHangCheckers=Disable all hang checkers
Node.disableHangCheckersLong=Disable all hang checkers/watchdog functions. Set this if you are profiling Fred.
Node.l10nLanguage=The language the node will use to display messages
Node.l10nLanguageLong=This setting will change the language used to display messages. Keep in mind that some strings won't be translated until next node startup though.
NodeUpdateManager.enabled=Check for, and download new versions
NodeUpdateManager.enabledLong=Should your node automatically check for new versions of Freenet. If yes, new versions will be automatically detected and downloaded, but not necessarily installed. This setting resets itself always back to false unless the node runs within the wrapper.
NodeUpdateManager.installNewVersions=Automatically install new versions
NodeUpdateManager.installNewVersionsLong=Should your node automatically update to the newest version of Freenet, without asking?
NodeUpdateManager.updateURI=Where should the node look for updates?
NodeUpdateManager.updateURILong=Where should the node look for updates?
NodeUpdateManager.revocationURI=Where should the node look for the revocation key ?
NodeUpdateManager.revocationURILong=URI for the revocation key. If this is found the node will display its contents and disable the auto-updater.
NodeUpdateManager.extURI=Where should the node look for updates to freenet-ext.jar?
NodeUpdateManager.extURILong=Where should the node look for updates to freenet-ext.jar?
PluginManager.loadedPlugins=Plugins to load on start up
PluginManager.loadedPluginsLong=A list of plugins that are started when the node starts
PluginManager.loadedOnStartup=Plugins to load on startup
PluginManager.loadedOnStartupLong=Classpath, name and location for plugins to load when node starts up
RequestStarterGroup.scheduler=Priority policy of the scheduler
RequestStarterGroup.schedulerLong=Set the priority policy scheme used by the scheduler.
SimpleToadletServer.enabled=Enable FProxy?
SimpleToadletServer.enabledLong=Whether to enable FProxy and related HTTP services
SimpleToadletServer.bindTo=IP address to bind to
SimpleToadletServer.bindToLong=IP address to bind to
SimpleToadletServer.port=FProxy port number
SimpleToadletServer.portLong=FProxy port number
SimpleToadletServer.cssName=CSS Name
SimpleToadletServer.cssNameLong=Name of the CSS FProxy should use
SimpleToadletServer.advancedMode=Enable Advanced Mode?
SimpleToadletServer.advancedModeLong=Whether to show or not informations meant for advanced users/devs. This setting should be turned to false in most cases.
SimpleToadletServer.enableJS=Enable FProxy use of Javascript?
SimpleToadletServer.enableJSLong=Whether or not FProxy should use Javascript "helpers". This setting should be turned to false in most cases. Note that freesites may not use javascript even if this is enabled.
SimpleToadletServer.panicButton=Show the panic button?
SimpleToadletServer.panicButtonLong=Whether to show or not the panic button on the /queue/ page.
SimpleToadletServer.allowedHosts=Hostnames or IP addresses that are allowed to connect to FProxy.
SimpleToadletServer.allowedHostsLong=May be a comma-separated list of single IPs and CIDR masked IPs like 192.168.0.0/24. Note that these can access the hard disk within the limits set by other config options.
SimpleToadletServer.allowedFullAccess=Hosts having a full access to Fproxy (read warning)
SimpleToadletServer.allowedFullAccessLong=Hosts granted full access (i.e. change config settings, restart, etc) to the node. WARNING: Be very careful who you give full fproxy access to!
SimpleToadletServer.cssOverride=Override the CSS with a custom one (WARNING!)
SimpleToadletServer.cssOverrideLong=That setting allows you to override the node's CSS with a custom file. WARNING: CSSes can be dangerous and won't be filtered! use at your own risks. (consider mailing devl@freenetproject to get it included in the main distribution ;) )
LogConfigHandler.enabled=Enable logging?
LogConfigHandler.enabledLong=Set to false to completely disable logging
LogConfigHandler.dirName=Logging directory
LogConfigHandler.dirNameLong=Directory into which to put log files
LogConfigHandler.maxZippedLogsSize=Maximum disk space used by old logs
LogConfigHandler.maxZippedLogsSizeLong=Maximum disk space used by old logs
LogConfigHandler.minLoggingPriority=Minimum priority to log messages at
LogConfigHandler.minLoggingPriorityLong=Minimum priority at which messages are logged. options are debug, minor, normal, error, in order of diminishing verbosity
LogConfigHandler.detaildPriorityThreshold=Detailed priority thresholds
LogConfigHandler.detaildPriorityThresholdLong=Detailed priority thresholds, example freenet:normal,freenet.node:minor
LogConfigHandler.rotationInterval=Log rotation interval
LogConfigHandler.rotationIntervalLong=Log rotation interval - period after which logs are rotated. We keep the last two log files (current and prev), plus lots of compressed logfiles up to maxZippedLogsSize
LogConfigHandler.maxCachedBytes=Max cached log bytes in RAM
LogConfigHandler.maxCachedBytesLong=Maximum number of bytes of logging cached in RAM
LogConfigHandler.maxCachedLines=Max cached log lines in RAM
LogConfigHandler.maxCachedLinesLong=Maximum number of lines of logging cached in RAM
SymlinkerToadlet.symlinks=Symlinks in ToadletServer
SymlinkerToadlet.symlinksLong=A list of "alias#target"'s that forms a bunch of symlinks
BookmarkManager.list=List of bookmarks
BookmarkManager.listLong=A list of bookmarked freesites
NodeIPDectector.ipOverride=IP address override
NodeIPDectector.ipOverrideLong=IP address override (not usually needed) - set this if you have a static IP address or a domain name (e.g. dyndns), and you are behind a firewall.
NodeIPDectector.tempAddressHint=Temporary IP address hint
NodeIPDectector.tempAddressHintLong=Temporary hint to what our IP might be; deleted after use
NodeIPDectector.inclLocalAddress=Include local addresses in noderef
NodeIPDectector.inclLocalAddressLong=Whether to include local addresses (LAN and localhost) in node references. This will not be useful unless the both sides set allowLocalAddresses=true for the respective references (use the Darknet page in advanced mode to set this flag).
NodeClientCore.allowInsecureCHK=Allow insecure CHKs?
NodeClientCore.allowInsecureCHKLong=Before 1010, all CHKs were insecure (only half encrypted). Allow old CHKs?
NodeClientCore.allowInsecureSSK=Allow insecure SSKs?
NodeClientCore.allowInsecureSSKLong=Before 1010, all SSKs were insecure (only half encrypted). Allow old SSKs?
NodeClientCore.lazyResume=Complete loading of persistent requests after startup? (Uses more memory)
NodeClientCore.lazyResumeLong=The node can load persistent queued requests during startup, or it can read the data into memory and then complete the request resuming process after the node has started up. Shorter start-up times, but uses more memory.
NodeClientCore.ignoreTooManyPathComponents=Ignore too many path components
NodeClientCore.ignoreTooManyPathComponentsLong=If true, the node won't generate TOO_MANY_PATH_COMPONENTS errors when a URI is fed to it which has extra, meaningless subdirs (/blah/blah) on the end beyond what is needed to fetch the key (for example, old CHKs will often have filenames stuck on the end which weren't part of the original insert; this is obsolete because we can now include the filename, and it is confusing to be able to add arbitrary strings to a URI, and it makes them hard to compare). Only enable this option if you need it for compatibility with older apps; it will be removed soon.
NodeClientCore.fileForClientStats=File to store client statistics in
NodeClientCore.fileForClientStatsLong=File to store client throttling statistics in (used to decide how often to send requests)
NodeClientCore.tempDir=Temp files directory
NodeClientCore.tempDirLong=Name of directory to put temporary files in
NodeClientCore.persistentTempDir=Persistent temp files directory
NodeClientCore.persistentTempDirLong=Name of directory to put persistent temp files in
NodeClientCore.downloadDir=Default download directory
NodeClientCore.downloadDirLong=The directory to save downloaded files into by default
NodeClientCore.downloadAllowedDirs=Directories downloading is allowed to
NodeClientCore.downloadAllowedDirsLong=Semicolon separated list of directories to which downloads are allowed. "downloads" means downloadsDir, empty means no downloads to disk allowed, "all" means downloads allowed from anywhere. WARNING! If this is set to "all" any user can download any file to anywhere on your computer!
NodeClientCore.uploadAllowedDirs=Directories uploading is allowed from
NodeClientCore.uploadAllowedDirsLong=Semicolon separated list of directories from which uploads are allowed. Empty means no uploads from disk allowed, "all" means uploads allowed from anywhere (including system files etc!). WARNING! If this is set to "all" any file on your computer can be uploaded by any user.
NodeStat.threadLimit=Thread limit
NodeStat.threadLimitLong=The node will try to limit its thread usage to the specified value, refusing new requests
NodeStat.aggressiveGC=AggressiveGC modificator
NodeStat.aggressiveGCLong=Enables the user to tweak the time in between GC and forced finalization. SHOULD NOT BE CHANGED unless you know what you're doing! -1 means : disable forced call to System.gc() and System.runFinalization()
NodeStat.memCheck=Enable the Memory check
NodeStat.memCheckLong=Enable the memory check (writes a message in logfile, mandatory for aggressiveGCModificator to have any effect!)
NodeStat.freeHeapBytesThreshold=Free heap bytes threshold
NodeStat.freeHeapBytesThresholdLong=The node will try to keep it's free heap bytes above the threshold by refusing new requests
NodeStat.freeHeapPercentThreshold=Free heap precent threshold
NodeStat.freeHeapPercentThresholdLong=The node will try to keep it's free heap precentage (of max heap bytes allowed) above the threshold by refusing new requests
NodeStat.statsPersister=File to store node statistics in
NodeStat.statsPersisterLong=File to store node statistics in (not client statistics, and these are used to decide whether to accept requests so please don't delete)
End
