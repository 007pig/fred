<?xml version="1.0"?>
<!-- ant build file for Freenet -->

<project name="Freenet" default="dist" basedir=".">
  <description>
     This file builds freenet...
     Possible targets: compile, dist (default), clean
  </description>

  <!-- set global properties for this build -->
  	<property name="src" location="src"/>
  	<property name="version_file" location="src/freenet/node/Version.java"/>
	<property name="build" location="build"/>
	<property name="lib"	location="lib"/>
	<property name="freenet-ext.location" location="${lib}/freenet-ext.jar"/>

<!-- ================================================== -->
<target name="get_revision" description="extract build number from svn" unless="svn.revision">
    <exec executable="svnversion" outputproperty="svn.revision">
        <arg value="."/>
    </exec>
    <property name="svn.revision" value="${svn.revision}"/>
</target>

<target name="revision" description="Creates svn revision label file" depends="get_revision">

    <echo message="Replacing version string with ${svn.revision}"/>
    <replaceregexp file="${version_file}"
	match="public static final int buildNumber = SVN_REVISION"
	replace="public static final int buildNumber = ${svn.revision} ;"
	byline="true"
    />
</target>

<!-- ================================================== -->

<target name="mkdir">
    <mkdir dir="${build}"/>
    <mkdir dir="${lib}"/>
</target>

<!-- ================================================== -->

<target name="env" depends="mkdir, revision"   description="Learn about the environment">
    <available file="${lib}/freenet-ext.jar" property="freenet-ext.present"/>
</target>

<!-- ================================================== -->

<target name="get-extjar" depends="env" unless="freenet-ext.present"
    description="Download some external libraries which Freenet relies on">
    <mkdir dir="${lib}"/>
    <get src="http://downloads.freenetproject.org/alpha/freenet-ext.jar" 
		 	dest="${freenet-ext.location}" 
	 verbose="true"
	 usetimestamp="true"/>
    <property name="freenet-ext.present" value="true"/>
</target>


  
    <!-- ================================================== -->
  <target name="compile" depends="get-extjar">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->

<!-- FIXME: remove the debug and replace with optimize -->
    <javac srcdir="${src}" destdir="${build}" debug="on" optimize="on" source="1.4">
    <classpath>
    	<pathelement location="${freenet-ext.location}"/>
    </classpath>
<!-- following a very temporary list of files to be build -->
      <include name="org/**/*.java"/>
      <include name="freenet/**/*.java"/>
      <include name="net/i2p/util/*.java"/>
      <exclude name="org/**/MersenneTwisterTest.java"/>
    </javac>
  </target>


    <!-- ================================================== -->
  <target name="dist" depends="compile"
      description="generate the distribution" >
    <!-- Create the distribution directory -->
    <!--<mkdir dir="."/>-->
    <!-- Put everything in ${build} into the freenet-${DSTAMP}.jar file -->
    <jar jarfile="freenet-cvs-snapshot.jar" basedir="${build}">
      <manifest>
      <attribute name="Main-Class" value="freenet/node/Node"/>
         <attribute name="Built-By" value="${user.name}"/>
	 <section name="common">
	   <attribute name="Specification-Title" value="Example"/>
	   <attribute name="Specification-Version" value="0.7pre"/>
	   <attribute name="Specification-Vendor" value="freenetproject.org"/>
	   <attribute name="Implementation-Title" value="Freenet"/>
	   <attribute name="Implementation-Version" value="0.7pre ${TODAY}"/> 
	   <attribute name="Implementation-Vendor" value="Freenetproject.org"/>
	 </section>
       </manifest>
    </jar>    
  </target>

    <!-- ================================================== -->
    <target name="clean" description="Delete class files and docs dir.">
        <delete dir="${build}"/>
        <!--<delete><fileset dir="src" includes="**/*.class"/></delete>-->
    </target>
    <target name="distclean" description="Delete class files and docs dir.">
        <delete dir="${build}"/>
        <delete dir="${lib}"/>
        <!--<delete><fileset dir="src" includes="**/*.class"/></delete>-->
    </target>

</project>
